<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.1.xsd">
      
   <!-- <http auto-config="true" use-expressions="true">
	    <intercept-url method = "GET" pattern="/*" access="hasRole('ROLE_USER')"/>
	    <http-basic/> 
   </http> -->
   
	<!--  <authentication-manager alias="authenticationManager">
	  <authentication-provider>
	    <user-service>
			   <user name="user1" password="abc" authorities="ROLE_USER" />
			   <user name="user2" password="xyz" authorities="ROLE_USER" />
	    </user-service>
	  </authentication-provider>
	</authentication-manager> -->
	
	
	<sec:http realm="Protected API" use-expressions="true" 
	auto-config="false" create-session="stateless" entry-point-ref="CustomAuthenticationEntryPoint">
    <sec:custom-filter ref="authenticationTokenProcessingFilter" position="PRE_AUTH_FILTER" />
   	<!--  <security:intercept-url pattern="/authenticate" access="permitAll"/> -->
    <!--  <sec:intercept-url pattern="/*" access="isAuthenticated()" />-->
    <sec:intercept-url pattern="/*" access="permitAll" />
	</sec:http>

<sec:authentication-manager alias="authenticationManager"/>

<beans:bean id="myAuthenticationManager" class="com.markitserv.hawthorne.authentication.CustomAuthunticationManager"/>

<beans:bean id="CustomAuthenticationEntryPoint"   class="com.markitserv.hawthorne.authentication.CustomAuthenticationEntryPoint" />

<beans:bean class="com.markitserv.hawthorne.authentication.AuthenticationTokenProcessingFilter" id="authenticationTokenProcessingFilter">
</beans:bean>
	
	
	
 </beans:beans>