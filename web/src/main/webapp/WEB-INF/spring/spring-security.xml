<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:sec="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.1.xsd">
 
   <!--  adding erase-credentials="false" as  password for the user stored in memory cache within InMemoryDaoImpl 
    instance gets reinitialized to null after a login/logout. -->
	
	<authentication-manager alias="authenticationManager"  erase-credentials="false"> 
	<authentication-provider ref="hardcodedAuthenticationProvider"/> 
	</authentication-manager>

	<sec:http realm="Protected API" use-expressions="true"
		auto-config="false" entry-point-ref="CustomAuthenticationEntryPoint">
		<sec:custom-filter ref="authenticationTokenProcessingFilter"
			position="PRE_AUTH_FILTER" />
		<sec:intercept-url pattern="/*" access="isAuthenticated()" />
    <sec:session-management>
			<sec:concurrency-control max-sessions="1"
				session-registry-ref="sessionRegistry" />
	</sec:session-management>
	</sec:http>

	<beans:bean id="CustomAuthenticationEntryPoint"
		class="com.markitserv.hawthorne.authentication.CustomAuthenticationEntryPoint" />

	<beans:bean id="authenticationTokenProcessingFilter"
		class="com.markitserv.hawthorne.authentication.AuthenticationTokenProcessingFilter">
	</beans:bean>
	
	<beans:bean id="hardcodedAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider"> 
		<beans:property name="userDetailsService"> 
		<beans:bean class="org.springframework.security.core.userdetails.memory.InMemoryDaoImpl"> 
		<beans:property name="userMap"> 
			<beans:value>
			superUser=super,ROLE_SUPERVISOR
			adminUser=admin,ROLE_ADMIN
			user=user,ROLE_USER
			</beans:value>
		</beans:property> 
		</beans:bean> 
		</beans:property> 
	</beans:bean>
	
	<beans:bean id="sessionRegistry"
		class="org.springframework.security.core.session.SessionRegistryImpl" />

</beans:beans>
